digraph state_machine {

	el_cnode [label="cNode\nelection", shape="diamond", color="red"];
	sensing [label="Sensing", color="blue"];
	cnode [label="cNode", color="blue"];
	vnode [label="vNode and\nsensing", color="blue"];
	el_vnode [label="vNode\nelection", shape="diamond"];
	el_vnode_bis [label="vNode\nelection,\nagain", shape="diamond"];
	has_1hop [label="any 1-hop\nneighbor\nleft?", shape="diamond"];
	vn_has_1hop [label="vNode;\nany 1-hop\nleft?", shape="diamond"];
	is_1hop_cnode [label="is this\n1-hop a\ncNode?", shape="diamond"];
	add_cnode [label="add cNode\nto list", shape="box"];

	el_cnode->cnode [label="elected"];
	cnode->el_cnode [label="end of cycle"];
	el_cnode->has_1hop [label="not elected"];
	has_1hop->sensing [label="no"];
	has_1hop->is_1hop_cnode [label="yes"];
	is_1hop_cnode->has_1hop [label="no"];
	is_1hop_cnode->el_vnode [label="yes"];
	sensing->el_cnode [label="end of cycle"];
	el_vnode->add_cnode [label="elected"];
	el_vnode->has_1hop [label="not elected"];
	vnode->el_cnode [label="end of cycle"];
	vn_has_1hop->el_vnode_bis [label="yes"];
	el_vnode_bis->add_cnode [label="elected"];
	add_cnode->vn_has_1hop [label=""];
	el_vnode_bis->vn_has_1hop [label="not elected for that cNode"];
	vn_has_1hop->vnode [label="no"];
}
	

